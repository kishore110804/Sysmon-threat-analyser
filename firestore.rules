rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - only accessible by the user themselves or admins
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow delete: if request.auth != null && isAdmin();
    }
    
    // Orders - users can read their own orders, admins can manage all
    match /orders/{orderId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
      allow update: if request.auth != null && isAdmin();
      allow delete: if request.auth != null && isAdmin();
    }
    
    // Products - readable by everyone, writable only by admins
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Collaboration requests - users can create and read their own, admins can manage all
    match /collaborations/{collaborationId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
      allow update: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if request.auth != null && isAdmin();
    }
    
    // Helper function to check if user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
  }
}
